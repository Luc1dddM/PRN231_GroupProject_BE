// <auto-generated />
using System;
using Catalog.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Catalog.API.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Catalog.API.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = "2e167242-59e7-448b-9ebe-893f4c2bc7fb",
                            CreatedAt = new DateTime(2024, 10, 9, 7, 16, 23, 905, DateTimeKind.Local).AddTicks(3938),
                            CreatedBy = "Test",
                            Name = "Asus",
                            Status = true,
                            Type = "Brand",
                            UpdatedAt = new DateTime(2024, 10, 9, 7, 16, 23, 905, DateTimeKind.Local).AddTicks(3942),
                            UpdatedBy = "Test"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = "691ff56c-98fd-45dc-b90d-936dfd9baf56",
                            CreatedAt = new DateTime(2024, 10, 9, 7, 16, 23, 905, DateTimeKind.Local).AddTicks(3962),
                            CreatedBy = "Test",
                            Name = "Razer",
                            Status = true,
                            Type = "Brand",
                            UpdatedAt = new DateTime(2024, 10, 9, 7, 16, 23, 905, DateTimeKind.Local).AddTicks(3963),
                            UpdatedBy = "Test"
                        });
                });

            modelBuilder.Entity("Catalog.API.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = "Test",
                            CreateDate = new DateTime(2024, 10, 9, 7, 16, 23, 905, DateTimeKind.Local).AddTicks(2541),
                            Description = "Razer Pro Click Humanscale Mouse | Wireless",
                            ImageUrl = "Test",
                            Name = "Razer Pro Click Humanscale Mouse | Wireless",
                            Price = 2290000f,
                            ProductId = "b1267079-b139-44b3-99bb-c6d831c8dda7",
                            Status = true,
                            UpdateBy = "Test",
                            UpdateDate = new DateTime(2024, 10, 9, 7, 16, 23, 905, DateTimeKind.Local).AddTicks(2557)
                        },
                        new
                        {
                            Id = 2,
                            CreateBy = "Test",
                            CreateDate = new DateTime(2024, 10, 9, 7, 16, 23, 905, DateTimeKind.Local).AddTicks(2563),
                            Description = "Razer DeathAdder V2 Pro Mouse | Wireless",
                            ImageUrl = "Test",
                            Name = "Razer DeathAdder V2 Pro Mouse | Wireless",
                            Price = 1990000f,
                            ProductId = "73a5e39d-e28e-4753-826a-b7439adf14a2",
                            Status = true,
                            UpdateBy = "Test",
                            UpdateDate = new DateTime(2024, 10, 9, 7, 16, 23, 905, DateTimeKind.Local).AddTicks(2564)
                        });
                });

            modelBuilder.Entity("Catalog.API.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCategoryId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updatedby")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductCategoryId")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("Catalog.API.Models.ProductCategory", b =>
                {
                    b.HasOne("Catalog.API.Models.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .HasPrincipalKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Product_Category_Category");

                    b.HasOne("Catalog.API.Models.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .HasPrincipalKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_Product_Category_Product");

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Catalog.API.Models.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("Catalog.API.Models.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
