// <auto-generated />
using System;
using Catalog.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Catalog.API.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240930015727_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Catalog.API.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.HasIndex("CategoryId")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "3da5cd25-4aa6-41f7-b511-9a79e0a63c1f",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 57, 25, 502, DateTimeKind.Local).AddTicks(4911),
                            CreatedBy = "Test",
                            Name = "Asus",
                            Status = true,
                            Type = "Brand",
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 57, 25, 502, DateTimeKind.Local).AddTicks(4914),
                            UpdatedBy = "Test"
                        },
                        new
                        {
                            CategoryId = "7dcaa0ae-4576-42e3-bc82-88bb78393e4a",
                            CreatedAt = new DateTime(2024, 9, 30, 8, 57, 25, 502, DateTimeKind.Local).AddTicks(4917),
                            CreatedBy = "Test",
                            Name = "Razer",
                            Status = true,
                            Type = "Brand",
                            UpdatedAt = new DateTime(2024, 9, 30, 8, 57, 25, 502, DateTimeKind.Local).AddTicks(4918),
                            UpdatedBy = "Test"
                        });
                });

            modelBuilder.Entity("Catalog.API.Models.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = "b12da1fc-4bd5-40c3-b445-75b47e6db14b",
                            CreateBy = "Test",
                            CreateDate = new DateTime(2024, 9, 30, 8, 57, 25, 502, DateTimeKind.Local).AddTicks(3857),
                            Description = "Razer Pro Click Humanscale Mouse | Wireless",
                            ImageUrl = "Test",
                            Name = "Razer Pro Click Humanscale Mouse | Wireless",
                            Price = 2290000f,
                            Status = true,
                            UpdateBy = "Test",
                            UpdateDate = new DateTime(2024, 9, 30, 8, 57, 25, 502, DateTimeKind.Local).AddTicks(3868)
                        },
                        new
                        {
                            ProductId = "c63003ba-b30d-4f87-9680-b634cab1317c",
                            CreateBy = "Test",
                            CreateDate = new DateTime(2024, 9, 30, 8, 57, 25, 502, DateTimeKind.Local).AddTicks(3873),
                            Description = "Razer DeathAdder V2 Pro Mouse | Wireless",
                            ImageUrl = "Test",
                            Name = "Razer DeathAdder V2 Pro Mouse | Wireless",
                            Price = 1990000f,
                            Status = true,
                            UpdateBy = "Test",
                            UpdateDate = new DateTime(2024, 9, 30, 8, 57, 25, 502, DateTimeKind.Local).AddTicks(3873)
                        });
                });

            modelBuilder.Entity("Catalog.API.Models.ProductCategory", b =>
                {
                    b.Property<string>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updatedby")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductCategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductCategoryId")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("Catalog.API.Models.ProductCategory", b =>
                {
                    b.HasOne("Catalog.API.Models.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Product_Category_Category");

                    b.HasOne("Catalog.API.Models.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_Product_Category_Product");

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Catalog.API.Models.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("Catalog.API.Models.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
