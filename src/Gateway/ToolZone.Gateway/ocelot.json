{
  "Routes": [
    //Identity Routes

    //1. Testing route
    {
      "DownstreamPathTemplate": "/WeatherForecast",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7183
        }
      ],
      "AddHeadersToRequest": {
        "UserId": "Claims[id] > value"
      },
      "UpstreamPathTemplate": "/gateway/WeatherForecast",
      "UpstreamHttpMethod": [ "GET" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "RouteClaimsRequirement": {
        "permissions": "UpdateUser"
      }
    },

    //2. AddRole route
    {
      "DownstreamPathTemplate": "/api/Identity/AddRole",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7183
        }
      ],
      "AddHeadersToRequest": {
        "UserId": "Claims[id] > value"
      },
      "UpstreamPathTemplate": "/gateway/Identity/AddRole",
      "UpstreamHttpMethod": [ "POST" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "RouteClaimsRequirement": {
        "permissions": "ReadUser"
      }
    },

    //Catalog Routes
    //1. CreateProduct route
    {
      "DownstreamPathTemplate": "/products",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5050
        }
      ],
      "AddHeadersToRequest": {
        "UserId": "Claims[id] > value"
      },
      "UpstreamPathTemplate": "/gateway/products",
      "UpstreamHttpMethod": [ "Post" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      }
    },
    //2. GetProducts route
    {
      "DownstreamPathTemplate": "/products",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5050
        }
      ],
      "AddHeadersToRequest": {
        "UserId": "Claims[id] > value"
      },
      "UpstreamPathTemplate": "/gateway/products",
      "UpstreamHttpMethod": [ "Get" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      }
    },
    //3. GetProductsForCustomer route
    {
      "DownstreamPathTemplate": "/productsForCustomer",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5050
        }
      ],
      "AddHeadersToRequest": {
        "UserId": "Claims[id] > value"
      },
      "UpstreamPathTemplate": "/gateway/productsForCustomer",
      "UpstreamHttpMethod": [ "Get" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      }
    },
    //4. GetProductById route
    {
      "DownstreamPathTemplate": "/products/{id}",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5050
        }
      ],
      "AddHeadersToRequest": {
        "UserId": "Claims[id] > value"
      },
      "UpstreamPathTemplate": "/gateway/products/{id}",
      "UpstreamHttpMethod": [ "Get" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      }
    },
    //5. UpdateProduct route
    {
      "DownstreamPathTemplate": "/products",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5050
        }
      ],
      "AddHeadersToRequest": {
        "UserId": "Claims[id] > value"
      },
      "UpstreamPathTemplate": "/gateway/products",
      "UpstreamHttpMethod": [ "Put" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      }
    },
    //6. AddColor route
    {
      "DownstreamPathTemplate": "/products/AddColor",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5050
        }
      ],
      "AddHeadersToRequest": {
        "UserId": "Claims[id] > value"
      },
      "UpstreamPathTemplate": "/gateway/products/AddColor",
      "UpstreamHttpMethod": [ "Post" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      }
    },
    //7. GetCategory route
    {
      "DownstreamPathTemplate": "/categories",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5050
        }
      ],
      "AddHeadersToRequest": {
        "UserId": "Claims[id] > value"
      },
      "UpstreamPathTemplate": "/gateway/categories",
      "UpstreamHttpMethod": [ "Get" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      }
    },
    //8. GetCategoryById route
    {
      "DownstreamPathTemplate": "/categories/{id}",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5050
        }
      ],
      "AddHeadersToRequest": {
        "UserId": "Claims[id] > value"
      },
      "UpstreamPathTemplate": "/gateway/categories/{id}",
      "UpstreamHttpMethod": [ "Get" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      }
    },
    //9. CreateCategory route
    {
      "DownstreamPathTemplate": "/categories",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5050
        }
      ],
      "AddHeadersToRequest": {
        "UserId": "Claims[id] > value"
      },
      "UpstreamPathTemplate": "/gateway/categories",
      "UpstreamHttpMethod": [ "Post" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      }
    },
    //10. UpdateCategory route
    {
      "DownstreamPathTemplate": "/categories",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5050
        }
      ],
      "AddHeadersToRequest": {
        "UserId": "Claims[id] > value"
      },
      "UpstreamPathTemplate": "/gateway/categories",
      "UpstreamHttpMethod": [ "Put" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      }
    },
    //11. GetColor route
    {
      "DownstreamPathTemplate": "/categories/color/{id}",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5050
        }
      ],
      "AddHeadersToRequest": {
        "UserId": "Claims[id] > value"
      },
      "UpstreamPathTemplate": "/gateway/categories/color/{id}",
      "UpstreamHttpMethod": [ "Get" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      }
    },
    //Coupon Routes
    //1. CreateCoupon route
    {
      "DownstreamPathTemplate": "/api/Coupons/",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7079
        }
      ],
      "AddHeadersToRequest": {
        "UserId": "Claims[id] > value"
      },
      "UpstreamPathTemplate": "/gateway/coupons/create",
      "UpstreamHttpMethod": [ "Post" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      }
    },
    //2. EditCoupon route
    {
      "DownstreamPathTemplate": "/api/Coupons/",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7079
        }
      ],
      "AddHeadersToRequest": {
        "UserId": "Claims[id] > value"
      },
      "UpstreamPathTemplate": "/gateway/coupons/edit",
      "UpstreamHttpMethod": [ "Put" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      }
    },
    //3. GetCoupons route
    {
      "DownstreamPathTemplate": "/api/Coupons/",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7079
        }
      ],
      "AddHeadersToRequest": {
        "UserId": "Claims[id] > value"
      },
      "UpstreamPathTemplate": "/gateway/coupons/getcoupons",
      "UpstreamHttpMethod": [ "Get" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      }
    },
  ],

  "GlobalConfiguration": {
    "BaseUrl": "https://localhost:7777"
  }
}
